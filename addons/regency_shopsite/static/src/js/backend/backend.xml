<?xml version="1.0" encoding="UTF-8"?>
<templates>

    <t t-inherit="web.FormView" t-inherit-mode="extension" owl="1">
        <xpath expr="//div[hasclass('o_form_view_container')]" position="attributes">
            <attribute name="t-att-class" add="model.root.resModel === 'overlay.template' ? 'form_view_for_overlay_template' : ''" separator=" "/>
        </xpath>
        <xpath expr="//div[hasclass('o_form_view_container')]" position="before">
            <t t-if="model.root.resModel === 'overlay.template'">
                <style type="text/css">
                    <t t-foreach="model.root.data.all_overlay_fonts || []" t-as="font" t-key="font_index">
                        @font-face {
                            font-family: '<t t-esc="font.font_name"/>';
                            src: url(/web/content/overlay.font/<t t-esc="font.id"/>/font);
                        }
                    </t>
                </style>
            </t>
        </xpath>
    </t>

    <t t-name="overlay_areas" owl="1">
        <div class="d-flex">
            <button t-if="!editMode and Object.keys(state.overlayPositions).length"
                    class="ot_edit_mode_btn btn btn-primary"
                    t-on-click="onClickToEditMode">
                Edit areas
            </button>
            <span style="height: 31px;"/>
        </div>
        <div class="overlay_template_widget">
            <div t-if="state.imagesListModalData"
                 t-portal="'body'"
                 class="ot_image_list_popup_overlay"
                 t-ref="image_list_modal">
                <div class="ot_image_list_popup">
                    <div class="ot_image_list_popup_header">
                        <span>Select image</span>
                        <i class="fa fa-close" t-on-click="onClickCloseImageListModal"/>
                    </div>
                    <div class="ot_image_list_popup_content">
                        <t t-foreach="filteredProductImageList" t-as="image" t-key="image.id">
                            <div class="ot_modal_image_container"
                                 t-att-class="{ 'disabled': !image.isAvailable }">
                                <img t-att-src="image.image.src"
                                     t-on-click="() => this.onClickImage(image.id)"/>
                                <span class="ot_modal_image_size">
                                    <t t-esc="image.image.width + 'x' + image.image.height"/>
                                </span>
                            </div>
                        </t>
                        <div class="ot_modal_image_container"
                             t-on-click="() => this.onClickImage(false)">
                            <span class="fa fa-remove"/>
                            Remove image
                        </div>
                    </div>
                </div>
            </div>
            <t t-if="state.productTemplateImagesLoaded">
                <t t-foreach="Object.values(state.overlayPositions)" t-as="position" t-key="position.id">
                    <OverlayAreasPositionComponent editMode="editMode"
                                                   productTemplateId="productTemplateId || 0"
                                                   overlayPositionId="position.id"
                                                   overlayPositionName="position.name"
                                                   areasImageAttributeId="areasImageAttributeId || 0"
                                                   areaList="position.areaList || {}"
                                                   selectedImages="position.selectedImages || {}"
                                                   areasImageValueList="areasImageAttributeValueList"
                                                   productTemplateImages="state.productTemplateImages"
                                                   allowEditAreas="!withOverlayProducts"
                                                   openImageListModal="(args) => this.openImageListModal(args)"
                                                   fontList="fontList"
                                                   colorList="colorList"/>
                </t>
            </t>
        </div>
    </t>

    <t t-name="overlay_areas_position" owl="1">
        <div class="ot_areas_position">
            <div class="ot_areas_position_header">
                <t t-esc="props.overlayPositionName"/>
                <div t-if="!!props.productTemplateId"
                     class="ot_areas_position_header_tab_buttons">
                    <button class="btn btn-secondary mx-2" t-on-click="onClickOpenAreasTab">
                        <i class="fa fa-object-group mx-2"/>Areas
                    </button>
                    <button class="btn btn-secondary" t-on-click="onClickOpenImagesTab">
                        <i class="fa fa-image mr-1"/>Images
                    </button>
                </div>
            </div>
            <div class="ot_areas_position_main" t-att-class="{ 'd-none': !props.productTemplateId }">
                <div class="ot_areas_tab" t-att-class="{ 'ot_areas_tab_hide': state.activeTab !== AREAS_TAB }">
                    <div t-if="props.editMode and props.allowEditAreas" class="ot_areas_position_tools">
                        <t t-if="!!state.editorImage">
                            <button class="btn btn-primary" t-on-click="() => this.addRectangleArea({})">
                                <i class="fa fa-plus-circle"/>Rectangle
                            </button>
                            <button class="btn btn-primary" t-on-click="() => this.addEllipseArea({})">
                                <i class="fa fa-plus-circle"/>Ellipse
                            </button>
                            <button class="btn btn-primary" t-on-click="() => this.addTextArea({})">
                                <i class="fa fa-plus-circle"/>Text
                            </button>
                        </t>
                    </div>
                    <div class="ot_areas_position_editor_block"
                         t-att-class="{ 'd-none': !state.editorImage }">
                        <div class="ot_areas_position_editor">
                            <img t-att-src="state.editorImage.src || ''"
                                 t-ref="image_ref"/>
                            <div class="ot_areas_position_canvas_container" t-ref="canvas_container_ref">
                                <canvas t-ref="canvas_ref"/>
                            </div>
                        </div>
                        <div t-if="showEditorImageSwitcher"
                             class="ot_areas_position_editor_image_switcher">
                            <t t-foreach="editorSwitcherImageList" t-as="item" t-key="item.valueId">
                                <div t-att-class="{ 'selected_color_image': item.valueId === state.editorSwitcherImageValueId }"
                                     t-on-click="() => this.onChangeEditorImage(item.valueId)">
                                    <img t-att-src="item.imageSrc"/>
                                    <span>
                                        <t t-esc="item.name"/>
                                    </span>
                                </div>
                            </t>
                        </div>
                    </div>
                    <t t-if="!state.editorImage">
                        <div class="ot_areas_position_non_image">
                            Please select image to start editing
                        </div>
                    </t>
                    <div class="ot_area_list">
                    <t t-foreach="Object.values(state.areaList)" t-as="area" t-key="area.index">
                        <AreaParameters area="area"
                                        editMode="props.editMode and props.allowEditAreas"
                                        selectedAreaIndex="state.selectedAreaIndex || 0"
                                        selectArea="(args) => this.selectAreaListItem(args)"
                                        removeArea="(args) => this.removeArea(args)"
                                        fontList="props.fontList"
                                        colorList="props.colorList"/>
                    </t>
                </div>
                </div>
                <div class="ot_images_tab" t-att-class="{ 'd-none': state.activeTab !== IMAGES_TAB }">
                    <t t-foreach="areasImageValueList" t-as="value" t-key="value.id">
                        <div class="ot_images_tab_color_image_container">
                            <div class="ot_images_tab_color_image">
                                <button t-if="props.editMode"
                                        class="btn btn-primary ot_images_tab_color_image_change_btn"
                                        t-on-click="() => this.onClickChangeValueImage(value.id)">
                                    <i class="fa fa-image"/>
                                </button>
                                <t t-if="value.selectedImageSrc">
                                    <img t-att-src="value.selectedImageSrc"/>
                                </t>
                                <t t-else="">
                                    <div class="ot_images_tab_color_image_none">
                                        <span>Please select image</span>
                                    </div>
                                </t>
                            </div>
                            <div class="ot_images_tab_color_image_name">
                                <t t-esc="value.name"/>
                            </div>
                        </div>
                    </t>
                </div>
            </div>
            <t t-if="!props.productTemplateId">
                <div class="ot_areas_position_non_product">
                    Please select product to start editing
                </div>
            </t>
        </div>
    </t>

    <t t-name="areas_parameters" owl="1">
        <div class="ot_area_list_item"
             t-on-click="onClickAreaListItem"
             t-att-class="{ 'selected': props.selectedAreaIndex === props.area.index }">
            <div class="ot_area_list_item_left">
                <div class="ot_area_list_item_index">
                    <t t-esc="props.area.index"/>
                </div>
                <div class="ot_area_list_item_data">
                    <div class="ot_area_list_item_data_row">
                        <t t-if="['rectangle', 'text'].includes(props.area.areaType)">
                            <AreaParametersNumberInput areaIndex="props.area.index"
                                                       label="'Width'"
                                                       value="props.area.data.width"
                                                       disabled="!props.editMode"
                                                       changeValue="props.area.change.width"/>
                            <AreaParametersNumberInput areaIndex="props.area.index"
                                                       label="'Height'"
                                                       value="props.area.data.height"
                                                       disabled="!props.editMode"
                                                       changeValue="props.area.change.height"/>
                        </t>
                        <t t-if="props.area.areaType === 'ellipse'">
                            <AreaParametersNumberInput areaIndex="props.area.index"
                                                       label="'Rx'"
                                                       value="props.area.data.rx"
                                                       disabled="!props.editMode"
                                                       changeValue="props.area.change.rx"/>
                            <AreaParametersNumberInput areaIndex="props.area.index"
                                                       label="'Ry'"
                                                       value="props.area.data.ry"
                                                       disabled="!props.editMode"
                                                       changeValue="props.area.change.ry"/>
                        </t>
                        <AreaParametersNumberInput areaIndex="props.area.index"
                                                   label="'X'"
                                                   value="props.area.data.x"
                                                   disabled="!props.editMode"
                                                   changeValue="props.area.change.x"/>
                        <AreaParametersNumberInput areaIndex="props.area.index"
                                                   label="'Y'"
                                                   value="props.area.data.y"
                                                   disabled="!props.editMode"
                                                   changeValue="props.area.change.y"/>
                        <AreaParametersNumberInput areaIndex="props.area.index"
                                                   label="'Angle'"
                                                   value="props.area.data.angle"
                                                   disabled="!props.editMode"
                                                   changeValue="props.area.change.angle"/>
                    </div>
                    <div t-if="props.area.areaType === 'text'" class="ot_area_list_item_data_row">
                        <div class="ot_area_list_item_param">
                            <span>Font</span>
                            <select t-attf-style="font-family: '{{props.area.data.font.name}}';"
                                    t-att-disabled="!props.editMode"
                                    t-on-change="onChangeFont">
                                <t t-foreach="props.fontList" t-as="font" t-key="font_index">
                                    <option t-att-value="font.id"
                                            t-att-selected="font.id === props.area.data.font.id"
                                            t-att-data-name="font.name"
                                            t-attf-style="font-family: '{{font.name}}';">
                                        <t t-esc="font.name"/>
                                    </option>
                                </t>
                            </select>
                        </div>
                        <AreaParametersNumberInput areaIndex="props.area.index"
                                                   label="'Font size'"
                                                   value="props.area.data.fontSize"
                                                   disabled="!props.editMode"
                                                   inputMin="0"
                                                   inputMax="100"
                                                   changeValue="props.area.change.fontSize"/>
                        <div t-if="props.colorList.length" class="ot_area_list_item_param">
                            <span>Color</span>
                            <select t-att-disabled="!props.editMode"
                                    t-on-change="onChangeTextColor">
                                <t t-foreach="props.colorList" t-as="color" t-key="color_index">
                                    <option t-att-value="color.id"
                                            t-att-selected="color.id === props.area.data.color.id"
                                            t-att-data-color="color.color"
                                            t-att-data-name="color.name">
                                        <t t-esc="color.name"/>
                                    </option>
                                </t>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div t-if="props.editMode"
                 class="ot_area_list_item_remove"
                 t-on-click.stop="onClickRemoveArea">
                <i class="fa fa-remove"/>
            </div>
        </div>
    </t>

    <t t-name="areas_parameters_number_input" owl="1">
        <div class="ot_area_list_item_param">
            <span><t t-esc="props.label"/></span>
            <input type="number" t-ref="input"
                   t-att-value="props.value.toString()"
                   t-att-min="props.inputMin" t-att-step="props.inputStep"
                   t-att-disabled="props.disabled"
                   t-on-change="onChangeInput"
                   t-on-input="onInput"/>
        </div>
    </t>

</templates>
